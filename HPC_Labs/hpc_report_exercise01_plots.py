import matplotlib.pyplot as plt
import numpy as np
import csv
plt.close('all')


class counter:
    def __init__(self) -> None:
        counter.val = 0

    def count():
        c = counter.val
        counter.val += 1
        return c


"""
- 4 1 1.93 100x100
Number of iterations: 131, omega: 1.93
Delta: 0.000066
Delta: 0.000089
Delta: 0.000099
Delta: 0.000078
(1) Elapsed Wtime       0.005309 s ( 89.1% CPU)
(2) Elapsed Wtime       0.005308 s ( 85.5% CPU)
(3) Elapsed Wtime       0.005310 s ( 86.7% CPU)
(0) Elapsed Wtime       0.009293 s ( 89.2% CPU)

- 2 2 1.93 100x100
Number of iterations: 131, omega: 1.93
Delta: 0.000089
Delta: 0.000082
Delta: 0.000099
Delta: 0.000087
(1) Elapsed Wtime       0.005498 s ( 89.0% CPU)
(2) Elapsed Wtime       0.005496 s ( 89.0% CPU)
(3) Elapsed Wtime       0.005501 s ( 90.1% CPU)
(0) Elapsed Wtime       0.009459 s ( 90.4% CPU)

- 4 1 1.93 200x200
Number of iterations: 532, omega: 1.93
Delta: 0.000063
Delta: 0.000098
Delta: 0.000099
Delta: 0.000078
(1) Elapsed Wtime       0.059708 s ( 94.3% CPU)
(2) Elapsed Wtime       0.059707 s ( 94.5% CPU)
(3) Elapsed Wtime       0.059712 s ( 94.2% CPU)
(0) Elapsed Wtime       0.074123 s ( 94.9% CPU)

- 2 2 1.93 200x200
Number of iterations: 532, omega: 1.93
Delta: 0.000098
Delta: 0.000096
Delta: 0.000099
Delta: 0.000098
(1) Elapsed Wtime       0.060286 s ( 98.1% CPU)
(2) Elapsed Wtime       0.060288 s ( 97.5% CPU)
(3) Elapsed Wtime       0.060292 s ( 97.8% CPU)
(0) Elapsed Wtime       0.075101 s ( 97.1% CPU)

- 4 1 1.93 400x400
Number of iterations: 1561, omega: 1.93
Delta: 0.000066
Delta: 0.000099
Delta: 0.000100
Delta: 0.000077
(1) Elapsed Wtime       0.619254 s ( 98.8% CPU)
(2) Elapsed Wtime       0.619255 s ( 99.0% CPU)
(3) Elapsed Wtime       0.619252 s ( 98.9% CPU)
(0) Elapsed Wtime       0.673155 s ( 99.0% CPU)

- 2 2 1.93 400x400
Number of iterations: 1561, omega: 1.93
Delta: 0.000099
Delta: 0.000098
Delta: 0.000100
Delta: 0.000099
(1) Elapsed Wtime       0.620277 s ( 99.3% CPU)
(2) Elapsed Wtime       0.620275 s ( 99.1% CPU)
(3) Elapsed Wtime       0.620277 s ( 99.0% CPU)
(0) Elapsed Wtime       0.674249 s ( 99.3% CPU)

- 4 1 1.93 800x800
Number of iterations: 3601, omega: 1.93
Delta: 0.000071
Delta: 0.000100
Delta: 0.000100
Delta: 0.000072
(1) Elapsed Wtime       5.472918 s ( 99.7% CPU)
(2) Elapsed Wtime       5.472918 s ( 99.7% CPU)
(3) Elapsed Wtime       5.472930 s ( 99.7% CPU)
(0) Elapsed Wtime       5.691494 s ( 99.7% CPU)

- 2 2 1.93 800x800
Number of iterations: 3601, omega: 1.93
Delta: 0.000100
Delta: 0.000100
Delta: 0.000100
Delta: 0.000100
(1) Elapsed Wtime       5.486153 s ( 99.7% CPU)
(2) Elapsed Wtime       5.486152 s ( 99.8% CPU)
(3) Elapsed Wtime       5.486152 s ( 99.8% CPU)
(0) Elapsed Wtime       5.705497 s ( 99.7% CPU)
"""

# 1.2.3

time_per_iterations = [
    [(1, 4), [0.000043,
              0.000042,
              0.000042,
              0.000042,
              0.000041,
              0.000041,
              0.000041,
              0.000041,
              0.000041,
              0.000041,
              0.000043,
              0.000042,
              0.000042,
              0.000042,
              0.000041,
              0.000041,
              0.000041,
              0.000041,
              0.000041,
              0.000041,
              0.000043,
              0.000042,
              0.000042,
              0.000042,
              0.000041,
              0.000041,
              0.000041,
              0.000041,
              0.000041,
              0.000041,
              0.000043,
              0.000042,
              0.000042,
              0.000042,
              0.000041,
              0.000041,
              0.000041,
              0.000041,
              0.000041,
              0.000041], 100],
    [(2, 2), [0.000044,
              0.000043,
              0.000042,
              0.000044,
              0.000042,
              0.000043,
              0.000042,
              0.000043,
              0.000042,
              0.000042,
              0.000044,
              0.000043,
              0.000042,
              0.000044,
              0.000042,
              0.000043,
              0.000042,
              0.000043,
              0.000042,
              0.000042,
              0.000044,
              0.000043,
              0.000042,
              0.000044,
              0.000042,
              0.000043,
              0.000042,
              0.000043,
              0.000042,
              0.000042,
              0.000044,
              0.000043,
              0.000042,
              0.000044,
              0.000042,
              0.000043,
              0.000042,
              0.000043,
              0.000042,
              0.000042], 100],
    [(4, 1), [0.000039,
              0.000038,
              0.000037,
              0.000038,
              0.000037,
              0.000037,
              0.000037,
              0.000037,
              0.000037,
              0.000037,
              0.000039,
              0.000038,
              0.000037,
              0.000038,
              0.000037,
              0.000037,
              0.000037,
              0.000037,
              0.000037,
              0.000037,
              0.000039,
              0.000038,
              0.000037,
              0.000038,
              0.000037,
              0.000037,
              0.000037,
              0.000037,
              0.000037,
              0.000037,
              0.000039,
              0.000038,
              0.000037,
              0.000038,
              0.000037,
              0.000037,
              0.000037,
              0.000037,
              0.000037,
              0.000037], 100],
    [(1, 4), [0.000157,
              0.000149,
              0.000148,
              0.000148,
              0.000157,
              0.000149,
              0.000148,
              0.000148,
              0.000148,
              0.000148,
              0.000148,
              0.000148,
              0.000148,
              0.000148,
              0.000148,
              0.000148,
              0.000148,
              0.000148,
              0.000148,
              0.000148,
              0.000157,
              0.000149,
              0.000148,
              0.000148,
              0.000148,
              0.000148,
              0.000148,
              0.000148,
              0.000148,
              0.000148,
              0.000157,
              0.000149,
              0.000148,
              0.000148,
              0.000148,
              0.000148,
              0.000148,
              0.000148,
              0.000148,
              0.000148], 200],
    [(2, 2), [0.000152,
              0.000152,
              0.000151,
              0.000155,
              0.000155,
              0.000152,
              0.000152,
              0.000152,
              0.000152,
              0.000150,
              0.000152,
              0.000152,
              0.000151,
              0.000155,
              0.000155,
              0.000152,
              0.000152,
              0.000152,
              0.000152,
              0.000150,
              0.000152,
              0.000152,
              0.000151,
              0.000155,
              0.000155,
              0.000152,
              0.000152,
              0.000152,
              0.000152,
              0.000150,
              0.000152,
              0.000152,
              0.000151,
              0.000155,
              0.000155,
              0.000152,
              0.000152,
              0.000152,
              0.000152,
              0.000150], 200],
    [(4, 1), [0.000185,
              0.000156,
              0.000156,
              0.000156,
              0.000155,
              0.000156,
              0.000156,
              0.000155,
              0.000157,
              0.000156,
              0.000185,
              0.000156,
              0.000156,
              0.000156,
              0.000155,
              0.000156,
              0.000182,
              0.000156,
              0.000156,
              0.000156,
              0.000155,
              0.000156,
              0.000156,
              0.000155,
              0.000157,
              0.000156,
              0.000156,
              0.000155,
              0.000157,
              0.000156,
              0.000182,
              0.000156,
              0.000157,
              0.000156,
              0.000155,
              0.000156,
              0.000156,
              0.000155,
              0.000157,
              0.000156], 200],
    [(1, 4), [0.000546,
              0.000561,
              0.000558,
              0.000560,
              0.000565,
              0.000560,
              0.000561,
              0.000560,
              0.000565,
              0.000559,
              0.000546,
              0.000561,
              0.000558,
              0.000560,
              0.000565,
              0.000560,
              0.000561,
              0.000560,
              0.000565,
              0.000559,
              0.000546,
              0.000561,
              0.000558,
              0.000560,
              0.000565,
              0.000560,
              0.000561,
              0.000560,
              0.000565,
              0.000559,
              0.000546,
              0.000561,
              0.000558,
              0.000560,
              0.000565,
              0.000560,
              0.000561,
              0.000560,
              0.000565,
              0.000559], 400],
    [(2, 2), [0.000602,
              0.000604,
              0.000591,
              0.000600,
              0.000598,
              0.000600,
              0.000597,
              0.000596,
              0.000597,
              0.000600,
              0.000602,
              0.000603,
              0.000591,
              0.000600,
              0.000598,
              0.000600,
              0.000597,
              0.000596,
              0.000597,
              0.000600,
              0.000602,
              0.000603,
              0.000591,
              0.000600,
              0.000598,
              0.000600,
              0.000597,
              0.000596,
              0.000597,
              0.000600,
              0.000602,
              0.000603,
              0.000591,
              0.000600,
              0.000598,
              0.000600,
              0.000597,
              0.000596,
              0.000597,
              0.000600], 400],
    [(4, 1), [0.000552,
              0.000556,
              0.000553,
              0.000555,
              0.000563,
              0.000604,
              0.000589,
              0.000583,
              0.000575,
              0.000581,
              0.000552,
              0.000556,
              0.000553,
              0.000555,
              0.000563,
              0.000604,
              0.000589,
              0.000583,
              0.000575,
              0.000581,
              0.000552,
              0.000556,
              0.000553,
              0.000555,
              0.000563,
              0.000604,
              0.000589,
              0.000583,
              0.000575,
              0.000581,
              0.000552,
              0.000556,
              0.000553,
              0.000555,
              0.000563,
              0.000604,
              0.000589,
              0.000583,
              0.000575,
              0.000581], 400],
    [(1, 4), [0.002214,
              0.002217,
              0.002230,
              0.002202,
              0.002261,
              0.002183,
              0.002212,
              0.002260,
              0.002203,
              0.002272,
              0.002213,
              0.002217,
              0.002230,
              0.002201,
              0.002261,
              0.002183,
              0.002212,
              0.002260,
              0.002203,
              0.002272,
              0.002213,
              0.002217,
              0.002230,
              0.002201,
              0.002261,
              0.002183,
              0.002212,
              0.002260,
              0.002203,
              0.002272,
              0.002213,
              0.002217,
              0.002230,
              0.002201,
              0.002261,
              0.002183,
              0.002212,
              0.002260,
              0.002203,
              0.002272], 800],
    [(2, 2), [0.002102,
              0.002099,
              0.002102,
              0.002096,
              0.002104,
              0.002099,
              0.002102,
              0.002096,
              0.002106,
              0.002103,
              0.002101,
              0.002100,
              0.002103,
              0.002102,
              0.002102,
              0.002099,
              0.002102,
              0.002096,
              0.002106,
              0.002103,
              0.002101,
              0.002100,
              0.002103,
              0.002102,
              0.002106,
              0.002103,
              0.002101,
              0.002100,
              0.002103,
              0.002102,
              0.002104,
              0.002099,
              0.002102,
              0.002096,
              0.002106,
              0.002103,
              0.002101,
              0.002100,
              0.002103,
              0.002102], 800],
    [(4, 1), [0.002325,
              0.002320,
              0.002318,
              0.002325,
              0.002325,
              0.002320,
              0.002318,
              0.002325,
              0.002312,
              0.002317,
              0.002312,
              0.002317,
              0.002317,
              0.002325,
              0.002317,
              0.002325,
              0.002305,
              0.002325,
              0.002305,
              0.002325,
              0.002325,
              0.002320,
              0.002318,
              0.002325,
              0.002312,
              0.002317,
              0.002317,
              0.002325,
              0.002305,
              0.002325,
              0.002325,
              0.002320,
              0.002318,
              0.002325,
              0.002312,
              0.002317,
              0.002317,
              0.002325,
              0.002305,
              0.002325], 800]
]

fig, axs = plt.subplots(ncols=2, nrows=2, figsize=(16, 8))

# grid size 100
all_data = []
x_axis = [""]
for (a, b), liste, grid_size in time_per_iterations:
    if grid_size == 100:
        print(f"({a},{b}): {grid_size}")
        x_axis.append(f"({a},{b}): {grid_size}")
        all_data.append([1000*el for el in liste])

axs[0, 0].boxplot(all_data)
axs[0, 0].xaxis.set_ticks([i for i in range(len(x_axis))], labels=x_axis)
axs[0, 0].semilogy()
axs[0, 0].set_ylabel("time per iteration [ms]")
axs[0, 0].grid()

# grid size 200
all_data = []
x_axis = [""]
for (a, b), liste, grid_size in time_per_iterations:
    if grid_size == 200:
        print(f"({a},{b}): {grid_size}")
        x_axis.append(f"({a},{b}): {grid_size}")
        all_data.append([1000*el for el in liste])

axs[0, 1].boxplot(all_data)
axs[0, 1].xaxis.set_ticks([i for i in range(len(x_axis))], labels=x_axis)
axs[0, 1].semilogy()
axs[0, 1].grid()

# grid size 400
all_data = []
x_axis = [""]
for (a, b), liste, grid_size in time_per_iterations:
    if grid_size == 400:
        print(f"({a},{b}): {grid_size}")
        x_axis.append(f"({a},{b}): {grid_size}")
        all_data.append([1000*el for el in liste])

axs[1, 0].semilogy()
axs[1, 0].boxplot(all_data)
axs[1, 0].xaxis.set_ticks([i for i in range(len(x_axis))], labels=x_axis)
axs[1, 0].set_ylabel("time per iteration [ms]")
axs[1, 0].grid()

# grid size 800
all_data = []
x_axis = [""]
for (a, b), liste, grid_size in time_per_iterations:
    if grid_size == 800:
        print(f"({a},{b}): {grid_size}")
        x_axis.append(f"({a},{b}): {grid_size}")
        all_data.append([1000*el for el in liste])

axs[1, 1].semilogy()
axs[1, 1].boxplot(all_data)
axs[1, 1].xaxis.set_ticks([i for i in range(len(x_axis))], labels=x_axis)
axs[1, 1].grid()

plt.show()
# fig.savefig("HPC_Labs/figs/exercise01_ex_1_2_3.pdf")
# fig.savefig("HPC_Labs/figs/exercise01_ex_1_2_3.svg")

all_data = np.array(all_data).flatten()
average_800_grid = np.average(all_data)
print(f"average on 800x800: {average_800_grid}")

# 1.2.5

N = [100**2, 200**2, 400**2, 800**2]
vals = [131, 532, 1561, 3601]

f = plt.figure()
ax = plt.gca()
ax.scatter(N, vals)
ax.set_title("number of iterations over grid size")
ax.set_ylabel("# iterations")
ax.set_xlabel("grid size")
# f.savefig("HPC_Labs/figs/exercise01_ex_1_2_5.pdf")
# f.savefig("HPC_Labs/figs/exercise01_ex_1_2_5.svg")

# 1.2.6


def exercise_1_2_6():
    # read file:
    errors = np.zeros(5000)
    with open("HPC_Labs/HPC/exercise01/errors_0.dat") as file:
        for i, line in enumerate(file):
            if i == 0:
                title = line.rstrip()
            else:
                errors[i-1] = float(line.rstrip())

    f = plt.figure()
    ax = plt.gca()
    ax.plot(errors, label=title)
    ax.set_title("error over # iterations")
    ax.set_xlabel("# iterations")
    ax.set_ylabel("global error")
    plt.semilogy()
    plt.grid()
    plt.legend()
    plt.show()
    f.savefig("HPC_Labs/figs/exercise01_ex_1_2_6.pdf")
    f.savefig("HPC_Labs/figs/exercise01_ex_1_2_6.svg")


# 1.2.6
# global delta
errors = [
    (0, 1.9300),
    (25, 0.0756),
    (50, 0.0090),
    (75, 0.0036),
    (100, 0.0026),
    (125, 0.0021),
    (150, 0.0017),
    (175, 0.0015),
    (200, 0.0013),
    (225, 0.0012),
    (250, 0.0011),
    (275, 0.0011),
    (300, 0.0010),
    (325, 0.0010),
    (350, 0.0010),
    (375, 0.0009),
    (400, 0.0009),
    (425, 0.0009),
    (450, 0.0008),
    (475, 0.0008),
    (500, 0.0008),
    (525, 0.0007),
    (550, 0.0007),
    (575, 0.0007),
    (600, 0.0007),
    (625, 0.0006),
    (650, 0.0006),
    (675, 0.0006),
    (700, 0.0006),
    (725, 0.0006),
    (750, 0.0006),
    (775, 0.0005),
    (800, 0.0005),
    (825, 0.0005),
    (850, 0.0005),
    (875, 0.0005),
    (900, 0.0005),
    (925, 0.0005),
    (950, 0.0005),
    (975, 0.0004),
    (1000, 0.0004),
    (1025, 0.0004),
    (1050, 0.0004),
    (1075, 0.0004),
    (1100, 0.0004),
    (1125, 0.0004),
    (1150, 0.0004),
    (1175, 0.0004),
    (1200, 0.0004),
    (1225, 0.0004),
    (1250, 0.0004),
    (1275, 0.0004),
    (1300, 0.0004),
    (1325, 0.0004),
    (1350, 0.0003),
    (1375, 0.0003),
    (1400, 0.0003),
    (1425, 0.0003),
    (1450, 0.0003),
    (1475, 0.0003),
    (1500, 0.0003),
    (1525, 0.0003),
    (1550, 0.0003),
    (1575, 0.0003),
    (1600, 0.0003),
    (1625, 0.0003),
    (1650, 0.0003),
    (1675, 0.0003),
    (1700, 0.0003),
    (1725, 0.0003),
    (1750, 0.0003),
    (1775, 0.0003),
    (1800, 0.0003),
    (1825, 0.0003),
    (1850, 0.0003),
    (1875, 0.0003),
    (1900, 0.0003),
    (1925, 0.0002),
    (1950, 0.0002),
    (1975, 0.0002),
    (2000, 0.0002),
    (2025, 0.0002),
    (2050, 0.0002),
    (2075, 0.0002),
    (2100, 0.0002),
    (2125, 0.0002),
    (2150, 0.0002),
    (2175, 0.0002),
    (2200, 0.0002),
    (2225, 0.0002),
    (2250, 0.0002),
    (2275, 0.0002),
    (2300, 0.0002),
    (2325, 0.0002),
    (2350, 0.0002),
    (2375, 0.0002),
    (2400, 0.0002),
    (2425, 0.0002),
    (2450, 0.0002),
    (2475, 0.0002),
    (2500, 0.0002),
    (2525, 0.0002),
    (2550, 0.0002),
    (2575, 0.0002),
    (2600, 0.0002),
    (2625, 0.0002),
    (2650, 0.0002),
    (2675, 0.0002),
    (2700, 0.0002),
    (2725, 0.0002),
    (2750, 0.0002),
    (2775, 0.0002),
    (2800, 0.0002),
    (2825, 0.0002),
    (2850, 0.0001),
    (2875, 0.0001),
    (2900, 0.0001),
    (2925, 0.0001),
    (2950, 0.0001),
    (2975, 0.0001),
    (3000, 0.0001),
    (3025, 0.0001),
    (3050, 0.0001),
    (3075, 0.0001),
    (3100, 0.0001),
    (3125, 0.0001),
    (3150, 0.0001),
    (3175, 0.0001),
    (3200, 0.0001),
    (3225, 0.0001),
    (3250, 0.0001),
    (3275, 0.0001),
    (3300, 0.0001),
    (3325, 0.0001),
    (3350, 0.0001),
    (3375, 0.0001),
    (3400, 0.0001),
    (3425, 0.0001),
    (3450, 0.0001),
    (3475, 0.0001),
    (3500, 0.0001),
    (3525, 0.0001),
    (3550, 0.0001),
    (3575, 0.0001),
    (3600, 0.0001)]


if __name__ == "__main__":
    exercise_1_2_6()
